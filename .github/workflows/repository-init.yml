name: Initialize repository on creation

on:
  push:
    # Triggers when the repository is created from a template
    branches:
      - main
      - master
  # Allows manual triggering
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history is available for PR

      - name: Check if repository was recently created
        run: |
          if [ $(git rev-list --count HEAD) -gt 1 ]; then
            echo "Repository has multiple commits, skipping cleanup."
            exit 1
          fi

#      - name: Get repository variables
#        id: repo-vars
#        env:
#          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          REPO_NAME="${{ github.repository }}"
#
#          LANGUAGE=$(gh api repos/$REPO_NAME --jq '.custom_properties.language // "unknown"')
#          TYPE=$(gh api repos/$REPO_NAME --jq '.custom_properties.type // "default"')
#
#          echo "Detected language: $LANGUAGE"
#          echo "Detected type: $TYPE"
#
#          echo "language=${LANGUAGE:-unknown}" >> $GITHUB_ENV
#          echo "type=${TYPE:-default}" >> $GITHUB_ENV

      - name: Get repository variables
        id: repo-vars
        run: |
          echo "Event path: $$GITHUB_EVENT_PATH"
          LANGUAGE=$(jq -r '.repository.custom_properties.language' < "$GITHUB_EVENT_PATH")
          TYPE=$(jq -r '.repository.custom_properties.type' < "$GITHUB_EVENT_PATH")
          echo "Detected branch name: ${{ github.ref_name }}"
          echo "Detected language: $LANGUAGE"
          echo "Detected type: $TYPE"
          echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "language=$LANGUAGE" >> $GITHUB_ENV
          echo "type=$TYPE" >> $GITHUB_ENV

      - name: Copy files dynamically
        run: |
          TEMPLATE_PATH="./template/${{ env.language }}/${{ env.type }}"
          if [ -d "$TEMPLATE_PATH" ]; then
            echo "Found template path $TEMPLATE_PATH. Copyinh."
            cp -r "$TEMPLATE_PATH"/* ./
          else
            echo "Template path $TEMPLATE_PATH does not exist. Exiting."
            exit 1
          fi

      - name: Remove template folder
        run: rm -rf ./template

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b cleanup-template
          git add .
          git commit -m "Cleanup template and move files"
          git push origin cleanup-template

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: cleanup-template
          title: "Cleanup template and move files"
          body: "This PR moves files from `./template/${{ env.language }}/${{ env.type }}` to root and removes the `template` folder."
          base: ${{ env.branch }}
#          delete-branch: true
